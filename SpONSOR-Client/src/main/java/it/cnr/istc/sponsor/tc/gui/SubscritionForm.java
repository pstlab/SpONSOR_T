/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package it.cnr.istc.sponsor.tc.gui;

import com.google.gson.Gson;
import com.toedter.calendar.JDateChooser;
import it.cnr.istc.i18n.annotations.I18N;
import it.cnr.istc.sponsor.tc.Main;
import it.cnr.istc.sponsor.tc.logic.Account;
import it.cnr.istc.sponsor.tc.logic.LoginEventListener;
import it.cnr.istc.sponsor.tc.logic.LoginTestManager;
import it.cnr.istc.sponsor.tc.logic.XMLQuestionnary;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.InputStreamReader;
import java.nio.charset.Charset;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.GroupLayout;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JScrollPane;
import javax.swing.JSeparator;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.SwingConstants;
import javax.swing.WindowConstants;
import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Unmarshaller;

/**
 *
 * @author Luca Coraci <luca.coraci@istc.cnr.it> ISTC-CNR
 */
public class SubscritionForm extends javax.swing.JFrame implements LoginEventListener {

    private PropensioneIndividualePanel pppPanel = null;
    private Icon notCompleteIcon = new ImageIcon(getClass().getResource("/it/cnr/istc/sponsor/tc/icons/t16.png"));
    private Icon completeIcon = new ImageIcon(getClass().getResource(   "/it/cnr/istc/sponsor/tc/icons/tt16.png"));
    private boolean nameOk = false;
    private boolean surnameOk = false;
    private boolean bornDateOk = false;
    private String descrizione1 = "<html><div>Inserisci i campi elencati a sinistra. I campi evidenziati dal triangolino rosso, sono obbligatori. Poi clicca su Avanti</div>";
    private String descrizione2 = "<html><div>Per ogni domanda distribuisci 10 punti alle varie risposte assegnando più punti alle affermazioni che ritieni più consone alla tua personalità.</div>";

    @I18N(key = "sub.form.title")
    private String title;
    /**
     * Creates new form SubscritionForm
     */
    public SubscritionForm() {
        initComponents();
        this.setTitle(title);
        this.jLabel5.setVisible(false);
        this.jLabel6.setVisible(false);
        this.jCheckBox_animazione.setVisible(false);
        this.jCheckBox_teleassistenza.setVisible(false);
        this.jCheckBox_vicinanze.setVisible(false);
        this.jSeparator1.setVisible(false);
        redButton1.setText("Avanti");
        this.jLabel_Descrizione.setText(descrizione1);
        this.redButton1.setEnabled(false);
        LoginTestManager.getInstance().addLoginEventListener(this);
        this.jDateChooser1.addPropertyChangeListener(new PropertyChangeListener() {

            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                if (jDateChooser1.getDate() != null) {
                    jLabel_bornDate.setIcon(completeIcon);
                    bornDateOk  = true;
                    
                }
                checkConditions();
            }
        });

        this.jDateChooser1.getDateEditor().addPropertyChangeListener(
                new PropertyChangeListener() {
                    @Override
                    public void propertyChange(PropertyChangeEvent e) {
                        if (jDateChooser1.getDate() == null) {
                            jLabel_bornDate.setIcon(notCompleteIcon);
                            bornDateOk = false;
                        }
                        checkConditions();
                    }
                });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new ButtonGroup();
        jPanel1 = new JPanel();
        jPanel2 = new JPanel();
        jLabel1 = new JLabel();
        jLabel_Descrizione = new JLabel();
        jScrollPane_container = new JScrollPane();
        jPanel_CreazioneAccount = new JPanel();
        jPanel3 = new JPanel();
        jLabel2 = new JLabel();
        jTextField_Nome = new JTextField();
        jLabel3 = new JLabel();
        jTextField_Cognome = new JTextField();
        jRadioButton1 = new JRadioButton();
        jRadioButton2 = new JRadioButton();
        jLabel4 = new JLabel();
        jDateChooser1 = new JDateChooser();
        jLabel5 = new JLabel();
        jCheckBox_teleassistenza = new JCheckBox();
        jCheckBox_animazione = new JCheckBox();
        jLabel6 = new JLabel();
        jCheckBox_vicinanze = new JCheckBox();
        jSeparator1 = new JSeparator();
        jLabel_nome = new JLabel();
        jLabel_cognome = new JLabel();
        jLabel_bornDate = new JLabel();
        redButton1 = new RedButton();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new Color(255, 255, 255));

        jPanel2.setBackground(new Color(255, 51, 51));

        jLabel1.setFont(new Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel1.setForeground(new Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel1.setText("Creazione Account");

        jLabel_Descrizione.setFont(new Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel_Descrizione.setForeground(new Color(255, 255, 255));
        jLabel_Descrizione.setText("jLabel7");

        GroupLayout jPanel2Layout = new GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_Descrizione, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, GroupLayout.DEFAULT_SIZE, 773, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_Descrizione, GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE))
        );

        jScrollPane_container.setBorder(null);

        jPanel_CreazioneAccount.setBackground(new Color(255, 255, 255));

        jPanel3.setBackground(new Color(245, 245, 245));

        jLabel2.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel2.setText("Nome:");

        jTextField_Nome.addKeyListener(new KeyAdapter() {
            public void keyReleased(KeyEvent evt) {
                jTextField_NomeKeyReleased(evt);
            }
        });

        jLabel3.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel3.setText("Cognome:");

        jTextField_Cognome.addKeyListener(new KeyAdapter() {
            public void keyReleased(KeyEvent evt) {
                jTextField_CognomeKeyReleased(evt);
            }
        });

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Uomo");
        jRadioButton1.setOpaque(false);

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Donna");
        jRadioButton2.setOpaque(false);

        jLabel4.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel4.setText("Nato il:");

        jDateChooser1.setOpaque(false);
        jDateChooser1.addKeyListener(new KeyAdapter() {
            public void keyReleased(KeyEvent evt) {
                jDateChooser1KeyReleased(evt);
            }
        });

        jLabel5.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel5.setText("Preferenza servizio:");

        jCheckBox_teleassistenza.setFont(new Font("Tahoma", 1, 12)); // NOI18N
        jCheckBox_teleassistenza.setText("teleassistenza");
        jCheckBox_teleassistenza.setOpaque(false);

        jCheckBox_animazione.setFont(new Font("Tahoma", 1, 12)); // NOI18N
        jCheckBox_animazione.setText("animazione");
        jCheckBox_animazione.setOpaque(false);

        jLabel6.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel6.setText("Dove ti trovi:");

        jCheckBox_vicinanze.setFont(new Font("Tahoma", 1, 12)); // NOI18N
        jCheckBox_vicinanze.setText("nelle vicinanze");
        jCheckBox_vicinanze.setOpaque(false);

        jLabel_nome.setIcon(new ImageIcon(getClass().getResource("/it/cnr/istc/sponsor/tc/icons/t16.png"))); // NOI18N

        jLabel_cognome.setIcon(new ImageIcon(getClass().getResource("/it/cnr/istc/sponsor/tc/icons/t16.png"))); // NOI18N

        jLabel_bornDate.setIcon(new ImageIcon(getClass().getResource("/it/cnr/istc/sponsor/tc/icons/t16.png"))); // NOI18N

        GroupLayout jPanel3Layout = new GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox_teleassistenza, GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                            .addComponent(jCheckBox_animazione, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTextField_Cognome, GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField_Nome))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel_nome)
                                    .addComponent(jLabel_cognome, GroupLayout.Alignment.TRAILING)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jDateChooser1, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                                    .addComponent(jRadioButton1, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jRadioButton2, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel_bornDate))))
                    .addGroup(GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6, GroupLayout.PREFERRED_SIZE, 88, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox_vicinanze, GroupLayout.PREFERRED_SIZE, 186, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField_Nome, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_nome))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jTextField_Cognome, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel_cognome))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton1)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton2)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel4, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jDateChooser1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel_bornDate))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jCheckBox_teleassistenza))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox_animazione)
                .addGap(3, 3, 3)
                .addComponent(jSeparator1, GroupLayout.PREFERRED_SIZE, 10, GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jCheckBox_vicinanze))
                .addContainerGap(292, Short.MAX_VALUE))
        );

        redButton1.setText("redButton1");
        redButton1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                redButton1ActionPerformed(evt);
            }
        });

        GroupLayout jPanel_CreazioneAccountLayout = new GroupLayout(jPanel_CreazioneAccount);
        jPanel_CreazioneAccount.setLayout(jPanel_CreazioneAccountLayout);
        jPanel_CreazioneAccountLayout.setHorizontalGroup(jPanel_CreazioneAccountLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_CreazioneAccountLayout.createSequentialGroup()
                .addComponent(jPanel3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(128, 128, 128)
                .addComponent(redButton1, GroupLayout.PREFERRED_SIZE, 168, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(282, Short.MAX_VALUE))
        );
        jPanel_CreazioneAccountLayout.setVerticalGroup(jPanel_CreazioneAccountLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel_CreazioneAccountLayout.createSequentialGroup()
                .addGap(166, 166, 166)
                .addComponent(redButton1, GroupLayout.PREFERRED_SIZE, 65, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane_container.setViewportView(jPanel_CreazioneAccount);

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jScrollPane_container, GroupLayout.DEFAULT_SIZE, 813, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane_container, GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE))
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void redButton1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_redButton1ActionPerformed
        try {

            if (pppPanel == null) {
                System.out.println("Ciao gino");
                JAXBContext context = JAXBContext.newInstance(XMLQuestionnary.class);
                Unmarshaller um = context.createUnmarshaller();
                FileInputStream fis = new FileInputStream("perception-q/questionnary.xml");
                InputStreamReader is = new InputStreamReader(fis, Charset.forName("UTF-8"));
//                FileReader fileReader = new FileReader(is.)

                XMLQuestionnary questionnary = (XMLQuestionnary) um.unmarshal(is);
                System.out.println("Q: " + questionnary.getName());
                System.out.println("Max point: " + questionnary.getMax());
                pppPanel = new PropensioneIndividualePanel(questionnary);
            }
            this.jScrollPane_container.setViewportView(pppPanel);
            this.jLabel_Descrizione.setText(descrizione2);
            
            Account account = new Account();
            account.setName(jTextField_Nome.getText());
            account.setSurname(jTextField_Cognome.getText());
            account.setGender(jRadioButton1.isSelected() ? Account.Gender.MALE : Account.Gender.FEMALE);
            account.setAnimation(jCheckBox_animazione.isSelected());
            account.setLiveClose(jCheckBox_vicinanze.isSelected());
            account.setTeleAssistent(jCheckBox_teleassistenza.isSelected());
            account.setBornDate(jDateChooser1.getDate());
            String s_s_s = account.toString();
            LoginTestManager.getInstance().setAccount(account);
            System.out.println(s_s_s);
            System.out.println("==========================");
            Gson gson = new Gson();
            Account accountPewe = gson.fromJson(s_s_s, Account.class);
            System.out.println("Account name:       "+accountPewe.getName());
            System.out.println("Account surname:    "+accountPewe.getSurname());
            System.out.println("Account date   :    "+accountPewe.getBornDate());
            System.out.println("Account gender :    "+accountPewe.getGender());
            System.out.println("Account animazione: "+accountPewe.isAnimation());
            System.out.println("Account live close: "+accountPewe.isLiveClose());
            System.out.println("Account teleassist: "+accountPewe.isTeleAssistent());
            System.out.println("==============================================");
            
//            account.setLiveClose(jCh);

        } catch (JAXBException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_redButton1ActionPerformed

    private void jTextField_NomeKeyReleased(KeyEvent evt) {//GEN-FIRST:event_jTextField_NomeKeyReleased
        if (jTextField_Nome.getText().isEmpty()) {
            this.jLabel_nome.setIcon(notCompleteIcon);
            nameOk = false;
        } else {
            this.jLabel_nome.setIcon(completeIcon);
            nameOk = true;
        }
        checkConditions();
    }//GEN-LAST:event_jTextField_NomeKeyReleased

    private void jTextField_CognomeKeyReleased(KeyEvent evt) {//GEN-FIRST:event_jTextField_CognomeKeyReleased
        if (jTextField_Cognome.getText().isEmpty()) {
            this.jLabel_cognome.setIcon(notCompleteIcon);
            surnameOk = false;
        } else {
            this.jLabel_cognome.setIcon(completeIcon);
            surnameOk = true;
        }
        checkConditions();
    }//GEN-LAST:event_jTextField_CognomeKeyReleased

    private void jDateChooser1KeyReleased(KeyEvent evt) {//GEN-FIRST:event_jDateChooser1KeyReleased

    }//GEN-LAST:event_jDateChooser1KeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SubscritionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SubscritionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SubscritionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SubscritionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SubscritionForm().setVisible(true);
            }
        });
    }
    
    private void clear(){
        this.jTextField_Cognome.setText("");
        this.jTextField_Nome.setText("");
        this.jRadioButton1.setSelected(true);
        this.jDateChooser1.cleanup();
        this.jCheckBox_animazione.setSelected(false);
        this.jCheckBox_teleassistenza.setSelected(false);
        this.jCheckBox_vicinanze.setSelected(false);
        this.pppPanel = null;
    }
    
    private void checkConditions(){
        if(nameOk && surnameOk && bornDateOk){
            this.redButton1.setEnabled(true);
        }else{
            this.redButton1.setEnabled(false);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private ButtonGroup buttonGroup1;
    private JCheckBox jCheckBox_animazione;
    private JCheckBox jCheckBox_teleassistenza;
    private JCheckBox jCheckBox_vicinanze;
    private JDateChooser jDateChooser1;
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JLabel jLabel4;
    private JLabel jLabel5;
    private JLabel jLabel6;
    private JLabel jLabel_Descrizione;
    private JLabel jLabel_bornDate;
    private JLabel jLabel_cognome;
    private JLabel jLabel_nome;
    private JPanel jPanel1;
    private JPanel jPanel2;
    private JPanel jPanel3;
    private JPanel jPanel_CreazioneAccount;
    private JRadioButton jRadioButton1;
    private JRadioButton jRadioButton2;
    private JScrollPane jScrollPane_container;
    private JSeparator jSeparator1;
    private JTextField jTextField_Cognome;
    private JTextField jTextField_Nome;
    private RedButton redButton1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void backHome() {
        this.jScrollPane_container.setViewportView(this.jPanel_CreazioneAccount);
    }

    @Override
    public void cleanup() {
        this.clear();
    }

}
