/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package it.cnr.istc.sponsor.tc.gui;

import it.cnr.istc.sponsor.tc.logic.QuestionPointListener;
import it.cnr.istc.sponsor.tc.logic.QuestionPointManager;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;
import java.beans.Beans;
import java.util.List;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.GroupLayout;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.LayoutStyle;

/**
 *
 * @author Luca Coraci <luca.coraci@istc.cnr.it> ISTC-CNR
 */
public class SinglePropensionePanel extends javax.swing.JPanel implements QuestionPointListener{

    private int usedPoint;
    private int maxPoint;
    private Map<String, Integer> answerMap = new HashMap<>();
    private List<QuestionPointListener> listeners = new ArrayList<>();
    private String questionTitle;

    /**
     * Creates new form SinglePropensionePanel
     */
    public SinglePropensionePanel(String title, String subtitle, int maxPoint) {
        initComponents();
        this.jLabel_title.setText("  " + title.trim());
        this.questionTitle = title.trim();
        this.jLabel_text.setText(subtitle.trim());
        this.maxPoint = maxPoint;
        QuestionPointManager.getInstance().addQuestionPointListener(this);
    }

    public String getQuestionTitle() {
        return questionTitle;
    }
    
    
    public int getPointByAnswer(String answerCode) {
        return answerMap.containsKey(answerCode) ? answerMap.get(answerCode) : -1;
    }

    public void setPointByAnswer(String answerCorde, int point) {
        this.answerMap.put(answerCorde, point);
        if (!Beans.isDesignTime()) {
            usedPoint = 0;
            for (Integer value : answerMap.values()) {
                usedPoint+=value;
            }
            System.out.println("used points = "+usedPoint);
            //usedPoint = answerMap.values().stream().mapToInt(Integer::intValue).sum(); //JDK 8
        }
    }

    public int getUsedPoint() {
        return usedPoint;
    }

    public void addQuestion(String code, String text) {
        this.add(new SingleAnswerPanel(code, "<html><div>" + text + "</div>", this, maxPoint));
    }

    public void addQuestionPointListener(QuestionPointListener listener) {
        this.listeners.add(listener);
    }

//    QUAQUA
    
    @Override
    public void pointChanged() {
//        for (QuestionPointListener listener : listeners) {
//            listener.pointChanged();
//        }
        this.jLabel_point.setText("<html><div style=text-align:center;>Punti Usati: "+usedPoint);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new JPanel();
        jLabel_title = new JLabel();
        jLabel_text = new JLabel();
        jLabel_point = new JLabel();

        setBackground(new Color(255, 255, 255));
        setLayout(new GridLayout(10, 1));

        jPanel1.setBackground(new Color(102, 153, 255));

        jLabel_title.setFont(new Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel_title.setForeground(new Color(255, 255, 255));
        jLabel_title.setText("Sezione I:");

        jLabel_text.setFont(new Font("Comic Sans MS", 0, 16)); // NOI18N
        jLabel_text.setForeground(new Color(255, 255, 255));
        jLabel_text.setText("<html><div>In che modo ritengo di poter contribuire ad un lavoro di gruppo ? </div>");

        jLabel_point.setFont(new Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel_point.setForeground(new Color(255, 255, 0));
        jLabel_point.setText("<html><div style=text-align:center;>Punti Usati: 0");
        jLabel_point.setToolTipText("");

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel_point, GroupLayout.PREFERRED_SIZE, 87, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_title, GroupLayout.PREFERRED_SIZE, 125, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_text, GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel_point, GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_title, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel_text, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        add(jPanel1);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JLabel jLabel_point;
    private JLabel jLabel_text;
    private JLabel jLabel_title;
    private JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
