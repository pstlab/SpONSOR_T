/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package it.cnr.istc.sponsor.tt.gui.freeturn;

import it.cnr.istc.i18n.annotations.I18N;
import it.cnr.istc.i18n.annotations.I18NUpdater;
import it.cnr.istc.sponsor.tt.logic.SettingsManager;
import it.cnr.istc.sponsor.tt.logic.TrainerManager;
import it.cnr.istc.sponsor.tt.logic.Utils;
import it.cnr.istc.sponsor.tt.logic.model.AvailableTimeToken;
import it.cnr.istc.sponsor.tt.logic.model.Interval;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.GroupLayout;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;

/**
 *
 * @author Luca Coraci <luca.coraci@istc.cnr.it> ISTC-CNR
 */
public class FreeTimePanel extends javax.swing.JPanel {

    @I18N(key = "label.time")
    private String labelTime;
    @I18N(key = "day.monday")
    private String labelMonday;
    @I18N(key = "day.tuesday")
    private String labelTuesday;
    @I18N(key = "day.wednesday")
    private String labelWednesday;
    @I18N(key = "day.thursday")
    private String labelThursday;
    @I18N(key = "day.friday")
    private String labelFriday;
    @I18N(key = "day.saturday")
    private String labelSaturday;
    @I18N(key = "day.sunday")
    private String labelSunday;

    private Date today;
    private boolean freeMode = true;

    private List<Date> week = new ArrayList<>();

    private boolean editable = true;

    /**
     * Creates new form FreeTimePanel
     */
    public FreeTimePanel() {
        initComponents();

        this.today = Utils.getCurrentMonday();

        int openTime = SettingsManager.getInstance().getOpenTime();
        int closeTime = SettingsManager.getInstance().getCloseTime();
        for (int i = openTime; i <= closeTime; i++) {
            this.freeTimeTableModel1.addTimeRow(today, i);
        }
        updateLabels(today);

    }
    
    public void clear(){
        this.freeTimeTableModel1.clear();
    }

    public void setEditable(boolean editable) {
        this.editable = editable;
        this.freeTimeTableModel1.setChangingActive(editable);
        this.freeTimeTableRenderer1.setEditable(editable);
    }

    @I18NUpdater
    public final void updateLabels(Date startDay) {

        String mainLabel = "dal " + getLabelDate(startDay);
        jTable1.getColumnModel().getColumn(0).setHeaderValue(labelTime);
        jTable1.getColumnModel().getColumn(1).setHeaderValue(labelMonday);
        Date d2 = new Date(startDay.getTime() + (1000l * 60l * 60 * 24l));
        jTable1.getColumnModel().getColumn(2).setHeaderValue(labelTuesday);
        Date d3 = new Date(d2.getTime() + (1000l * 60l * 60 * 24l));
        jTable1.getColumnModel().getColumn(3).setHeaderValue(labelWednesday);
        Date d4 = new Date(d3.getTime() + (1000l * 60l * 60 * 24l));
        jTable1.getColumnModel().getColumn(4).setHeaderValue(labelThursday);
        Date d5 = new Date(d4.getTime() + (1000l * 60l * 60 * 24l));
        jTable1.getColumnModel().getColumn(5).setHeaderValue(labelFriday);
        Date d6 = new Date(d5.getTime() + (1000l * 60l * 60 * 24l));
        jTable1.getColumnModel().getColumn(6).setHeaderValue(labelSaturday);
        Date d7 = new Date(d6.getTime() + (1000l * 60l * 60 * 24l));
        jTable1.getColumnModel().getColumn(7).setHeaderValue(labelSunday);
        mainLabel += " al " + getLabelDate(d7);
        week.clear();
        week.add(today);
        week.add(d2);
        week.add(d3);
        week.add(d4);
        week.add(d5);
        week.add(d6);
        week.add(d7);

        jTable1.setRowHeight(28);
//        this.jLabel_date.setText(mainLabel);
        jTable1.getTableHeader().repaint();
        jTable1.repaint();

    }

    public String getLabelDate(Date date) {
        String result = " ";
        result += date.getDate() + " ";
        result += new SimpleDateFormat("MMMMM").format(date);
        return result;
    }

    public void addAvailableTime(AvailableTimeToken token) {
        int day = token.getDay();
        int startTime = token.getStartTime();
        int endTime = token.getEndTime();
        this.freeTimeTableModel1.declareGreen(day, startTime, endTime);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        freeTimeTableModel1 = new FreeTimeTableModel();
        freeTimeTableRenderer1 = new FreeTimeTableRenderer();
        jScrollPane1 = new JScrollPane();
        jTable1 = new JTable();

        freeTimeTableRenderer1.setText("freeTimeTableRenderer1");

        jTable1.setModel(freeTimeTableModel1);
        jTable1.setCellSelectionEnabled(true);
        jTable1.setRowHeight(24);
        jTable1.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jTable1.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent evt) {
                jTable1MousePressed(evt);
            }
            public void mouseReleased(MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setHeaderValue("day");
            jTable1.getColumnModel().getColumn(0).setCellRenderer(freeTimeTableRenderer1);
            jTable1.getColumnModel().getColumn(1).setHeaderValue("day");
            jTable1.getColumnModel().getColumn(1).setCellRenderer(freeTimeTableRenderer1);
            jTable1.getColumnModel().getColumn(2).setHeaderValue("day");
            jTable1.getColumnModel().getColumn(2).setCellRenderer(freeTimeTableRenderer1);
            jTable1.getColumnModel().getColumn(3).setHeaderValue("day");
            jTable1.getColumnModel().getColumn(3).setCellRenderer(freeTimeTableRenderer1);
            jTable1.getColumnModel().getColumn(4).setHeaderValue("day");
            jTable1.getColumnModel().getColumn(4).setCellRenderer(freeTimeTableRenderer1);
            jTable1.getColumnModel().getColumn(5).setHeaderValue("day");
            jTable1.getColumnModel().getColumn(5).setCellRenderer(freeTimeTableRenderer1);
            jTable1.getColumnModel().getColumn(6).setHeaderValue("day");
            jTable1.getColumnModel().getColumn(6).setCellRenderer(freeTimeTableRenderer1);
            jTable1.getColumnModel().getColumn(7).setHeaderValue("day");
            jTable1.getColumnModel().getColumn(7).setCellRenderer(freeTimeTableRenderer1);
        }

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 922, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MousePressed(MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
        if (editable) {
            System.out.println("SI SONO EDITABILE");
            this.freeTimeTableRenderer1.setFreeActive(true);
        }

    }//GEN-LAST:event_jTable1MousePressed

    private void jTable1MouseReleased(MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
//         if(evt.isShiftDown()){
        if (editable) {
            System.out.println("SI SONO EDITABILE");
            this.freeTimeTableRenderer1.setFreeActive(false);
        }
//        }
    }//GEN-LAST:event_jTable1MouseReleased

    public List<Interval> getFreeIntervals() {
        return freeTimeTableModel1.getFreeIntervals();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private FreeTimeTableModel freeTimeTableModel1;
    private FreeTimeTableRenderer freeTimeTableRenderer1;
    private JScrollPane jScrollPane1;
    private JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
