/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package it.cnr.istc.sponsor.tt.gui.activities;

import it.cnr.istc.sponsor.tt.gui.activities.glass.ActivityTurnsLayer;
import it.cnr.istc.sponsor.tt.gui.engine.GuiEventManager;
import it.cnr.istc.sponsor.tt.gui.times.SingleTimeIntervalPanel;
import it.cnr.istc.sponsor.tt.gui.times.TitledPanel;
import java.awt.Color;
import java.awt.Component;
import java.awt.GridLayout;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.Transferable;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.swing.GroupLayout;
import javax.swing.Icon;
import javax.swing.JPanel;
import javax.swing.TransferHandler;

/**
 *
 * @author Luca Coraci <luca.coraci@istc.cnr.it> ISTC-CNR
 */
public class ActivityCaldendarContainer extends javax.swing.JPanel {

//    public static Map<Date, Map<String, Integer>> colorIndexedMap = new HashMap<>();
    
    /**
     * Creates new form TimeIntervalContainer
     */
    public ActivityCaldendarContainer(ActivityTurnsLayer glassPane) {
        initComponents();
        TitledPanel orariLabelPanel = new TitledPanel("Orari");
        orariLabelPanel.setBackground(Color.WHITE);
        orariLabelPanel.setLabelColor(Color.BLACK);
        this.add(orariLabelPanel);
        Date days[] = new Date[7];
        Date today = new Date();
        for (int i = 0; i < 7; i++) {
            this.add(new TitledPanel("DAY " + i));
            days[i] = today;
            today = new Date(today.getTime()+(1000l*60*60l*24l));
        }
        
        int startTime = 7;
        for (int i = 0; i < 24; i++) {
            String labelId = startTime <10 ? "0"+startTime+":00" : startTime+":00";
            TitledPanel timePanel = new TitledPanel(labelId);
            timePanel.setBackground(Color.ORANGE);
            timePanel.setLabelColor(Color.BLACK);
            this.add(timePanel);
            for (int j = 0; j < 7; j++) {
                this.add(new SingleTimeActivityIntervalPanel(glassPane,days[j], i));
            }
            startTime++;
            if(startTime == 24){
                startTime = 0;
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new GridLayout(25, 8));
    }// </editor-fold>//GEN-END:initComponents

    
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
