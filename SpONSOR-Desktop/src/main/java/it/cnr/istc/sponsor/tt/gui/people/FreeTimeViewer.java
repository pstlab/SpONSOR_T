/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package it.cnr.istc.sponsor.tt.gui.people;

import it.cnr.istc.sponsor.tt.gui.engine.GuiEventManager;
import it.cnr.istc.sponsor.tt.gui.freeturn.FreeTimePanel;
import it.cnr.istc.sponsor.tt.logic.MQTTClient;
import it.cnr.istc.sponsor.tt.logic.ParsedAccount;
import it.cnr.istc.sponsor.tt.logic.TrainerManager;
import it.cnr.istc.sponsor.tt.logic.model.AvailableTimeToken;
import it.cnr.istc.sponsor.tt.logic.model.Interval;
import it.cnr.istc.sponsor.tt.logic.model.Person;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import javax.swing.GroupLayout;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JToggleButton;
import javax.swing.JToolBar;
import javax.swing.LayoutStyle;
import javax.swing.SwingConstants;
import javax.swing.WindowConstants;

/**
 *
 * @author Luca Coraci <luca.coraci@istc.cnr.it> ISTC-CNR
 */
public class FreeTimeViewer extends javax.swing.JFrame {

    private boolean modifica = false;
    private Icon modifyIcon = new ImageIcon(getClass().getResource("/it/cnr/istc/sponsor/tt/gui/icons/iEngrenages24.png"));
    private Icon saveIcon = new ImageIcon(getClass().getResource("/it/cnr/istc/sponsor/tt/gui/icons/save24.png"));
    private List<AvailableTimeToken> tempTimes = null;
    private Person person;

    /**
     * Creates new form FreeTimeViewer
     */
    public FreeTimeViewer() {
        initComponents();
    }

    public FreeTimeViewer(Person person) {

        initComponents();
        this.setTitle("Disponibilità di "+person);
        this.person = person;
        this.freeTimePanel1.setEditable(false);
        List<AvailableTimeToken> availableTimes = person.getAvailableTimes();
        this.tempTimes = availableTimes;

        System.out.println("size available = " + availableTimes.size());
        for (AvailableTimeToken availableTime : availableTimes) {
            System.out.println("AVAILABLE TIME: " + availableTime);
            this.freeTimePanel1.addAvailableTime(availableTime);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        freeTimePanel1 = new FreeTimePanel();
        jToolBar1 = new JToolBar();
        jButton_annulla = new JButton();
        jToggleButton_modifica = new JToggleButton();

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButton_annulla.setFont(new Font("Tahoma", 0, 10)); // NOI18N
        jButton_annulla.setIcon(new ImageIcon(getClass().getResource("/it/cnr/istc/sponsor/tt/gui/icons/cancel24.png"))); // NOI18N
        jButton_annulla.setText("Annulla");
        jButton_annulla.setEnabled(false);
        jButton_annulla.setFocusable(false);
        jButton_annulla.setHorizontalTextPosition(SwingConstants.CENTER);
        jButton_annulla.setVerticalTextPosition(SwingConstants.BOTTOM);
        jButton_annulla.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton_annullaActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton_annulla);

        jToggleButton_modifica.setFont(new Font("Tahoma", 0, 10)); // NOI18N
        jToggleButton_modifica.setIcon(new ImageIcon(getClass().getResource("/it/cnr/istc/sponsor/tt/gui/icons/iEngrenages24.png"))); // NOI18N
        jToggleButton_modifica.setText("Modifica");
        jToggleButton_modifica.setFocusable(false);
        jToggleButton_modifica.setHorizontalTextPosition(SwingConstants.CENTER);
        jToggleButton_modifica.setVerticalTextPosition(SwingConstants.BOTTOM);
        jToggleButton_modifica.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jToggleButton_modificaActionPerformed(evt);
            }
        });
        jToolBar1.add(jToggleButton_modifica);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jToolBar1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(freeTimePanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jToolBar1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(freeTimePanel1, GroupLayout.DEFAULT_SIZE, 461, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_annullaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_annullaActionPerformed
        modifica = false;
        this.jButton_annulla.setEnabled(false);
        this.jToggleButton_modifica.setText(modifica ? "Salva" : "Modifica");
        this.jToggleButton_modifica.setSelected(false);

        this.jToggleButton_modifica.setIcon(modifica ? saveIcon : modifyIcon);
        this.freeTimePanel1.setEditable(modifica);
        freeTimePanel1.clear();
        System.out.println("size available = " + tempTimes.size());
        for (AvailableTimeToken availableTime : tempTimes) {
            System.out.println("AVAILABLE TIME: " + availableTime);
            this.freeTimePanel1.addAvailableTime(availableTime);
        }


    }//GEN-LAST:event_jButton_annullaActionPerformed

    private void jToggleButton_modificaActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jToggleButton_modificaActionPerformed

        if (modifica) {
            System.out.println("SALVAAAA");
            List<Interval> freeIntervals = this.freeTimePanel1.getFreeIntervals();
            this.person.getAccount().setIntervals(freeIntervals);
            MQTTClient.getInstance().editPerson(person);
            JOptionPane.showMessageDialog(null, "Il volontario è stato modificato con successo!", "Update", JOptionPane.INFORMATION_MESSAGE);
            GuiEventManager.getInstance().timeAvailableChanged();
        }
        this.modifica = !this.modifica;
        this.jToggleButton_modifica.setText(modifica ? "Salva" : "Modifica");
        this.jToggleButton_modifica.setIcon(modifica ? saveIcon : modifyIcon);
        this.jButton_annulla.setEnabled(modifica);
        this.freeTimePanel1.setEditable(modifica);
    }//GEN-LAST:event_jToggleButton_modificaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FreeTimeViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FreeTimeViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FreeTimeViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FreeTimeViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FreeTimeViewer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private FreeTimePanel freeTimePanel1;
    private JButton jButton_annulla;
    private JToggleButton jToggleButton_modifica;
    private JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
