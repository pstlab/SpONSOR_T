/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package it.cnr.istc.sponsor.tt.gui.people;

import com.toedter.calendar.JDateChooser;
import it.cnr.istc.i18n.annotations.I18N;
import it.cnr.istc.i18n.annotations.I18NUpdater;
import it.cnr.istc.sponsor.tt.gui.activities.edit.ActivityNameListModel;
import it.cnr.istc.sponsor.tt.gui.freeturn.FreeTimePanel;
import it.cnr.istc.sponsor.tt.logic.MQTTClient;
import it.cnr.istc.sponsor.tt.logic.TrainerManager;
import it.cnr.istc.sponsor.tt.logic.model.Account;
import it.cnr.istc.sponsor.tt.logic.model.ActivityName;
import it.cnr.istc.sponsor.tt.logic.model.Interval;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JSeparator;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.SpinnerNumberModel;
import javax.swing.SwingConstants;
import javax.swing.WindowConstants;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 *
 * @author Luca Coraci <luca.coraci@istc.cnr.it> ISTC-CNR
 */
public class NewPeopleFrame extends javax.swing.JFrame {

    int limit = 70;

    int currentPoint = 0;
    @I18N(key = "people.leader")
    private String peopleLeader;
    @I18N(key = "people.planner")
    private String peoplePlanner;
    @I18N(key = "people.brilliant")
    private String peopleBrilliant;
    @I18N(key = "people.evaluator")
    private String peopleEvaluator;
    @I18N(key = "people.concrete")
    private String peopleConcrete;
    @I18N(key = "people.explorer")
    private String peopleExplorer;
    @I18N(key = "people.worker")
    private String peopleWorker;
    @I18N(key = "people.objective")
    private String peopleObjective;
    @I18N(key = "people.new.title")
    private String title;

    /**
     * Creates new form NewPeopleFrame
     */
    public NewPeopleFrame() {
        initComponents();
        updateLabels();
    }

    @I18NUpdater
    public final void updateLabels() {
        this.jLabel_1.setText(peopleLeader);
        this.jLabel_2.setText(peoplePlanner);
        this.jLabel_3.setText(peopleBrilliant);
        this.jLabel_4.setText(peopleEvaluator);
        this.jLabel_5.setText(peopleConcrete);
        this.jLabel_6.setText(peopleExplorer);
        this.jLabel_7.setText(peopleWorker);
        this.jLabel_8.setText(peopleObjective);
        this.setTitle(title);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        activityNameListModel1 = new ActivityNameListModel();
        jPanel2 = new JPanel();
        jPanel1 = new JPanel();
        jLabel_Nome = new JLabel();
        jTextField_Nome = new JTextField();
        jLabel_Cognome = new JLabel();
        jTextField_Cognome = new JTextField();
        jDateChooser_birth = new JDateChooser();
        jLabel_DataNascita = new JLabel();
        jSeparator1 = new JSeparator();
        jSpinner1 = new JSpinner();
        jLabel_total = new JLabel();
        jSpinner2 = new JSpinner();
        jLabel_1 = new JLabel();
        jLabel_2 = new JLabel();
        jLabel_3 = new JLabel();
        jSpinner3 = new JSpinner();
        jLabel_4 = new JLabel();
        jSpinner4 = new JSpinner();
        jLabel_5 = new JLabel();
        jSpinner5 = new JSpinner();
        jLabel_6 = new JLabel();
        jSpinner6 = new JSpinner();
        jLabel_7 = new JLabel();
        jSpinner7 = new JSpinner();
        jLabel_8 = new JLabel();
        jSpinner8 = new JSpinner();
        jLabel4 = new JLabel();
        jTextField_Email = new JTextField();
        jLabel_DataNascita1 = new JLabel();
        jLabel_DataNascita2 = new JLabel();
        jTextField_Cell = new JTextField();
        jCheckBox1 = new JCheckBox();
        jCheckBox_dayMax = new JCheckBox();
        jSpinner_turnWeek = new JSpinner();
        jLabel1 = new JLabel();
        jSeparator2 = new JSeparator();
        jScrollPane1 = new JScrollPane();
        jList1 = new JList<>();
        jButton_manageAct = new JButton();
        freeTimePanel1 = new FreeTimePanel();
        jButton1 = new JButton();
        jButton2 = new JButton();

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBackground(new Color(255, 255, 255));

        jPanel1.setBackground(new Color(255, 255, 255));

        jLabel_Nome.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel_Nome.setText("Nome:");

        jLabel_Cognome.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel_Cognome.setText("Cognome:");

        jTextField_Cognome.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jTextField_CognomeActionPerformed(evt);
            }
        });

        jDateChooser_birth.setOpaque(false);

        jLabel_DataNascita.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel_DataNascita.setText("Data di Nascita:");

        jSpinner1.setModel(new SpinnerNumberModel(0, 0, 70, 1));
        jSpinner1.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                jSpinner1StateChanged(evt);
            }
        });

        jLabel_total.setFont(new Font("Tahoma", 1, 12)); // NOI18N
        jLabel_total.setForeground(new Color(0, 204, 51));
        jLabel_total.setText("70");

        jSpinner2.setModel(new SpinnerNumberModel(0, 0, 70, 1));
        jSpinner2.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                jSpinner2StateChanged(evt);
            }
        });

        jLabel_1.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel_1.setText("jLabel5:");

        jLabel_2.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel_2.setText("jLabel5:");

        jLabel_3.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel_3.setText("jLabel5:");

        jSpinner3.setModel(new SpinnerNumberModel(0, 0, 70, 1));
        jSpinner3.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                jSpinner3StateChanged(evt);
            }
        });

        jLabel_4.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel_4.setText("jLabel5:");

        jSpinner4.setModel(new SpinnerNumberModel(0, 0, 70, 1));
        jSpinner4.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                jSpinner4StateChanged(evt);
            }
        });

        jLabel_5.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel_5.setText("jLabel5:");

        jSpinner5.setModel(new SpinnerNumberModel(0, 0, 70, 1));
        jSpinner5.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                jSpinner5StateChanged(evt);
            }
        });

        jLabel_6.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel_6.setText("jLabel5:");

        jSpinner6.setModel(new SpinnerNumberModel(0, 0, 70, 1));
        jSpinner6.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                jSpinner6StateChanged(evt);
            }
        });

        jLabel_7.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel_7.setText("jLabel5:");

        jSpinner7.setModel(new SpinnerNumberModel(0, 0, 70, 1));
        jSpinner7.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                jSpinner7StateChanged(evt);
            }
        });

        jLabel_8.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel_8.setText("jLabel5:");

        jSpinner8.setModel(new SpinnerNumberModel(0, 0, 70, 1));
        jSpinner8.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                jSpinner8StateChanged(evt);
            }
        });

        jLabel4.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel4.setText("Punti rimanenti:");

        jLabel_DataNascita1.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel_DataNascita1.setText("Email:");

        jLabel_DataNascita2.setHorizontalAlignment(SwingConstants.RIGHT);
        jLabel_DataNascita2.setText("Telefono:");

        jCheckBox1.setBackground(new Color(255, 255, 255));
        jCheckBox1.setText("Admin:");
        jCheckBox1.setHorizontalTextPosition(SwingConstants.LEFT);

        jCheckBox_dayMax.setBackground(new Color(255, 255, 255));
        jCheckBox_dayMax.setText("massimo un turno al giorno:");
        jCheckBox_dayMax.setHorizontalTextPosition(SwingConstants.LEFT);

        jSpinner_turnWeek.setModel(new SpinnerNumberModel(1, 0, 50, 1));

        jLabel1.setText("numero turni massimi a settimana:");

        jScrollPane1.setBorder(null);

        jList1.setBorder(BorderFactory.createTitledBorder("Attivit√† che si vogliono svolgere"));
        jList1.setModel(activityNameListModel1);
        jScrollPane1.setViewportView(jList1);

        jButton_manageAct.setBackground(new Color(255, 51, 51));
        jButton_manageAct.setFont(new Font("Gill Sans MT Condensed", 0, 16)); // NOI18N
        jButton_manageAct.setForeground(new Color(255, 255, 255));
        jButton_manageAct.setText("<html><span style='font-size: 16px;'>G</span>estisci Attivit√†");
        jButton_manageAct.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton_manageAct.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton_manageActActionPerformed(evt);
            }
        });

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 223, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_manageAct))
                    .addComponent(jSeparator2, GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel_Nome, GroupLayout.PREFERRED_SIZE, 110, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_Nome))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel_Cognome, GroupLayout.PREFERRED_SIZE, 110, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_DataNascita, GroupLayout.PREFERRED_SIZE, 110, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_DataNascita1, GroupLayout.PREFERRED_SIZE, 110, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooser_birth, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField_Cognome)
                            .addComponent(jTextField_Email)))
                    .addComponent(jSeparator1)
                    .addGroup(GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel_total)
                        .addGap(24, 24, 24))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel_3, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel_5, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel_1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel_7, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addComponent(jLabel_2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinner2, GroupLayout.PREFERRED_SIZE, 79, GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jSpinner1, GroupLayout.PREFERRED_SIZE, 79, GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                            .addComponent(jSpinner7, GroupLayout.PREFERRED_SIZE, 79, GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jSpinner5, GroupLayout.PREFERRED_SIZE, 79, GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jSpinner3, GroupLayout.PREFERRED_SIZE, 79, GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel_4, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jSpinner4, GroupLayout.PREFERRED_SIZE, 79, GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                    .addGroup(GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jLabel_8, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jSpinner8, GroupLayout.PREFERRED_SIZE, 79, GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jLabel_6, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jSpinner6, GroupLayout.PREFERRED_SIZE, 79, GroupLayout.PREFERRED_SIZE))))))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel_DataNascita2, GroupLayout.PREFERRED_SIZE, 110, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinner_turnWeek, GroupLayout.PREFERRED_SIZE, 43, GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextField_Cell)))
                    .addGroup(GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox1, GroupLayout.Alignment.TRAILING)
                            .addComponent(jCheckBox_dayMax, GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_Nome)
                    .addComponent(jTextField_Nome, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_Cognome)
                    .addComponent(jTextField_Cognome, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(jDateChooser_birth, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel_DataNascita, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_Email, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_DataNascita1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_Cell, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_DataNascita2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(8, 8, 8)
                .addComponent(jCheckBox1)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox_dayMax)
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinner_turnWeek, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, GroupLayout.PREFERRED_SIZE, 10, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, GroupLayout.PREFERRED_SIZE, 23, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_total, GroupLayout.PREFERRED_SIZE, 23, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinner2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_2)
                    .addComponent(jSpinner1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_1, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jSpinner3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_3, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jSpinner5, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_5, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel_7, GroupLayout.Alignment.TRAILING)
                            .addComponent(jSpinner7, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jSpinner4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_4))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jSpinner6, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_6))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jSpinner8, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_8))))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, GroupLayout.PREFERRED_SIZE, 10, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton_manageAct, GroupLayout.PREFERRED_SIZE, 37, GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 81, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jButton1.setBackground(new Color(255, 51, 51));
        jButton1.setFont(new Font("Gill Sans MT Condensed", 0, 16)); // NOI18N
        jButton1.setForeground(new Color(255, 255, 255));
        jButton1.setText("<html><span style='font-size: 18px;'>A</span>GGIUNGI");
        jButton1.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new Color(255, 51, 51));
        jButton2.setFont(new Font("Gill Sans MT Condensed", 0, 16)); // NOI18N
        jButton2.setForeground(new Color(255, 255, 255));
        jButton2.setText("<html><span style='font-size: 18px;'>A</span>NNULLA");
        jButton2.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton2.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        GroupLayout jPanel2Layout = new GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, GroupLayout.PREFERRED_SIZE, 75, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(freeTimePanel1, GroupLayout.DEFAULT_SIZE, 899, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, GroupLayout.PREFERRED_SIZE, 86, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(freeTimePanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField_CognomeActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jTextField_CognomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_CognomeActionPerformed

    private void jSpinner1StateChanged(ChangeEvent evt) {//GEN-FIRST:event_jSpinner1StateChanged
//        int value = (int) this.jSpinner1.getValue();
//        System.out.println("value of spinner 1 -> " + value);
//        currentPoint += value;
//        this.jLabel_total.setText("" + (70 - currentPoint));
//        if (currentPoint == 0) {
//            this.jLabel_total.setForeground(new Color(204, 0, 0));
//        }
        updateCounting();
    }//GEN-LAST:event_jSpinner1StateChanged

    private void jSpinner2StateChanged(ChangeEvent evt) {//GEN-FIRST:event_jSpinner2StateChanged
//        int value = (int) this.jSpinner2.getValue();
//        System.out.println("value of spinner 1 -> " + value);
//        currentPoint++;
//        this.jLabel_total.setText("" + (70 - currentPoint));
//        if (currentPoint == 0) {
//            this.jLabel_total.setForeground(new Color(204, 0, 0));
//        }
        updateCounting();
    }//GEN-LAST:event_jSpinner2StateChanged

    private void jSpinner3StateChanged(ChangeEvent evt) {//GEN-FIRST:event_jSpinner3StateChanged
//        int value = (int) this.jSpinner3.getValue();
//        System.out.println("value of spinner 1 -> " + value);
//        currentPoint += value;
//        this.jLabel_total.setText("" + (70 - currentPoint));
//        if (currentPoint == 0) {
//            this.jLabel_total.setForeground(new Color(204, 0, 0));
//        }
        updateCounting();
    }//GEN-LAST:event_jSpinner3StateChanged

    private void jSpinner4StateChanged(ChangeEvent evt) {//GEN-FIRST:event_jSpinner4StateChanged
//        int value = (int) this.jSpinner4.getValue();
//        System.out.println("value of spinner 1 -> " + value);
//        currentPoint += value;
//        this.jLabel_total.setText("" + (70 - currentPoint));
//        if (currentPoint == 0) {
//            this.jLabel_total.setForeground(new Color(204, 0, 0));
//        }
        updateCounting();
    }//GEN-LAST:event_jSpinner4StateChanged

    private void jSpinner5StateChanged(ChangeEvent evt) {//GEN-FIRST:event_jSpinner5StateChanged
//        int value = (int) this.jSpinner5.getValue();
//        System.out.println("value of spinner 1 -> " + value);
//        currentPoint += value;
//        this.jLabel_total.setText("" + (70 - currentPoint));
//        if (currentPoint == 0) {
//            this.jLabel_total.setForeground(new Color(204, 0, 0));
//        }
        updateCounting();
    }//GEN-LAST:event_jSpinner5StateChanged

    private void jSpinner6StateChanged(ChangeEvent evt) {//GEN-FIRST:event_jSpinner6StateChanged
//        int value = (int) this.jSpinner6.getValue();
//        System.out.println("value of spinner 1 -> " + value);
//        currentPoint += value;
//        this.jLabel_total.setText("" + (70 - currentPoint));
//        if (currentPoint == 0) {
//            this.jLabel_total.setForeground(new Color(204, 0, 0));
//        }
        updateCounting();
    }//GEN-LAST:event_jSpinner6StateChanged

    private void jSpinner7StateChanged(ChangeEvent evt) {//GEN-FIRST:event_jSpinner7StateChanged
//        int value = (int) this.jSpinner7.getValue();
//        System.out.println("value of spinner 1 -> " + value);
//        currentPoint += value;
//        this.jLabel_total.setText("" + (70 - currentPoint));
//        if (currentPoint == 0) {
//            this.jLabel_total.setForeground(new Color(204, 0, 0));
//        }
        updateCounting();
    }//GEN-LAST:event_jSpinner7StateChanged

    private void jSpinner8StateChanged(ChangeEvent evt) {//GEN-FIRST:event_jSpinner8StateChanged
//        int value = (int) this.jSpinner8.getValue();
//        System.out.println("value of spinner 1 -> " + value);
//        currentPoint += value;
//        this.jLabel_total.setText("" + (70 - currentPoint));
//        if (currentPoint == 0) {
//            this.jLabel_total.setForeground(new Color(204, 0, 0));
//        }
        updateCounting();
    }//GEN-LAST:event_jSpinner8StateChanged

    private void jButton2ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        int value_peopleLeader = (int) this.jSpinner1.getValue();
        int value_peoplePlanner = (int) this.jSpinner2.getValue();
        int value_peopleBrilliant = (int) this.jSpinner3.getValue();
        int value_peopleEvaluator = (int) this.jSpinner4.getValue();
        int value_peopleConcrete = (int) this.jSpinner5.getValue();
        int value_peopleExplorer = (int) this.jSpinner6.getValue();
        int value_peopleWorker = (int) this.jSpinner7.getValue();
        int value_peopleObjective = (int) this.jSpinner8.getValue();
        Account account = new Account();
        account.setDirectSkillValues(
                value_peopleConcrete,
                value_peopleLeader,
                value_peoplePlanner,
                value_peopleBrilliant,
                value_peopleExplorer,
                value_peopleEvaluator,
                value_peopleWorker,
                value_peopleObjective);

//         this.jLabel_1.setText(peopleLeader);
//        this.jLabel_2.setText(peoplePlanner);
//        this.jLabel_3.setText(peopleBrilliant);
//        this.jLabel_4.setText(peopleEvaluator);
//        this.jLabel_5.setText(peopleConcrete);
//        this.jLabel_6.setText(peopleExplorer);
//        this.jLabel_7.setText(peopleWorker);
//        this.jLabel_8.setText(peopleObjective);
        List<Interval> freeIntervals = this.freeTimePanel1.getFreeIntervals();
        account.setOnlyTheseActivities(this.activityNameListModel1.values());

        for (Interval freeInterval : freeIntervals) {
            System.out.println("INTERVAL: " + freeInterval.toString());
        }
        account.setIntervals(freeIntervals);
        account.setName(this.jTextField_Nome.getText());
        account.setSurname(this.jTextField_Cognome.getText());
        account.setBornDate(this.jDateChooser_birth.getDate());
        account.setPhone(this.jTextField_Cell.getText());
        account.setEmail(this.jTextField_Email.getText());
        account.setAdmin(this.jCheckBox1.isSelected());
        account.setMaxTurnPerWeek((int) this.jSpinner_turnWeek.getValue());
        account.setOneTurnPerDay(this.jCheckBox_dayMax.isSelected());

        //account.setPhone(this.jTextField_Cell.getText());
        MQTTClient.getInstance().createAccount(account);

//           System.out.println("PRESIDENT   = "+C);
//        System.out.println("STRUCTURE   = "+P);
//        System.out.println("BRILLIANT   = "+S);
//        System.out.println("EVALUATOR   = "+G);
//        System.out.println("CONCRETE    = "+E);
//        System.out.println("EXPLORER    = "+V);
//        System.out.println("WORKER      = "+L);
//        System.out.println("OBJECTIVIST = "+O);
        this.setVisible(false);
        this.dispose();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton_manageActActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_manageActActionPerformed
        Enumeration<ActivityName> elements = this.activityNameListModel1.elements();
        List<ActivityName> list = new ArrayList();
        while (elements.hasMoreElements()) {
            ActivityName nextElement = elements.nextElement();
           
            list.add(nextElement);
        }
        List<ActivityName> remaining = TrainerManager.getInstance().getActivityNames();
        for (ActivityName activityName : list) {
            remaining.remove(activityName);
        }


        OnlyTheseActivityEditDialog dialog = new OnlyTheseActivityEditDialog(new JFrame(), true,remaining);
        dialog.setLocationRelativeTo(null);
        dialog.setVisible(true);
        List<ActivityName> activityNames = dialog.getActivityNames();
        if (activityNames != null) {
            for (ActivityName activityName : activityNames) {
                this.activityNameListModel1.addElement(activityName);
            }
        }
    }//GEN-LAST:event_jButton_manageActActionPerformed

    private void updateCounting() {
        int value1 = (int) this.jSpinner1.getValue();
        int value2 = (int) this.jSpinner2.getValue();
        int value3 = (int) this.jSpinner3.getValue();
        int value4 = (int) this.jSpinner4.getValue();
        int value5 = (int) this.jSpinner5.getValue();
        int value6 = (int) this.jSpinner6.getValue();
        int value7 = (int) this.jSpinner7.getValue();
        int value8 = (int) this.jSpinner8.getValue();

        this.currentPoint = value1 + value2 + value3 + value4 + value5 + value6 + value7 + value8;

        this.jLabel_total.setText("" + (70 - currentPoint));
        if (currentPoint == 70) {
            this.jLabel_total.setForeground(new Color(204, 0, 0));
            ((SpinnerNumberModel) this.jSpinner1.getModel()).setMaximum((Integer) this.jSpinner1.getValue());
            ((SpinnerNumberModel) this.jSpinner2.getModel()).setMaximum((Integer) this.jSpinner2.getValue());
            ((SpinnerNumberModel) this.jSpinner3.getModel()).setMaximum((Integer) this.jSpinner3.getValue());
            ((SpinnerNumberModel) this.jSpinner4.getModel()).setMaximum((Integer) this.jSpinner4.getValue());
            ((SpinnerNumberModel) this.jSpinner5.getModel()).setMaximum((Integer) this.jSpinner5.getValue());
            ((SpinnerNumberModel) this.jSpinner6.getModel()).setMaximum((Integer) this.jSpinner6.getValue());
            ((SpinnerNumberModel) this.jSpinner7.getModel()).setMaximum((Integer) this.jSpinner7.getValue());
            ((SpinnerNumberModel) this.jSpinner8.getModel()).setMaximum((Integer) this.jSpinner8.getValue());
        } else {
            this.jLabel_total.setForeground(new Color(0, 204, 41));
            ((SpinnerNumberModel) this.jSpinner1.getModel()).setMaximum(70);
            ((SpinnerNumberModel) this.jSpinner2.getModel()).setMaximum(70);
            ((SpinnerNumberModel) this.jSpinner3.getModel()).setMaximum(70);
            ((SpinnerNumberModel) this.jSpinner4.getModel()).setMaximum(70);
            ((SpinnerNumberModel) this.jSpinner5.getModel()).setMaximum(70);
            ((SpinnerNumberModel) this.jSpinner6.getModel()).setMaximum(70);
            ((SpinnerNumberModel) this.jSpinner7.getModel()).setMaximum(70);
            ((SpinnerNumberModel) this.jSpinner8.getModel()).setMaximum(70);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewPeopleFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewPeopleFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewPeopleFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewPeopleFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewPeopleFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private ActivityNameListModel activityNameListModel1;
    private FreeTimePanel freeTimePanel1;
    private JButton jButton1;
    private JButton jButton2;
    private JButton jButton_manageAct;
    private JCheckBox jCheckBox1;
    private JCheckBox jCheckBox_dayMax;
    private JDateChooser jDateChooser_birth;
    private JLabel jLabel1;
    private JLabel jLabel4;
    private JLabel jLabel_1;
    private JLabel jLabel_2;
    private JLabel jLabel_3;
    private JLabel jLabel_4;
    private JLabel jLabel_5;
    private JLabel jLabel_6;
    private JLabel jLabel_7;
    private JLabel jLabel_8;
    private JLabel jLabel_Cognome;
    private JLabel jLabel_DataNascita;
    private JLabel jLabel_DataNascita1;
    private JLabel jLabel_DataNascita2;
    private JLabel jLabel_Nome;
    private JLabel jLabel_total;
    private JList<ActivityName> jList1;
    private JPanel jPanel1;
    private JPanel jPanel2;
    private JScrollPane jScrollPane1;
    private JSeparator jSeparator1;
    private JSeparator jSeparator2;
    private JSpinner jSpinner1;
    private JSpinner jSpinner2;
    private JSpinner jSpinner3;
    private JSpinner jSpinner4;
    private JSpinner jSpinner5;
    private JSpinner jSpinner6;
    private JSpinner jSpinner7;
    private JSpinner jSpinner8;
    private JSpinner jSpinner_turnWeek;
    private JTextField jTextField_Cell;
    private JTextField jTextField_Cognome;
    private JTextField jTextField_Email;
    private JTextField jTextField_Nome;
    // End of variables declaration//GEN-END:variables
}
