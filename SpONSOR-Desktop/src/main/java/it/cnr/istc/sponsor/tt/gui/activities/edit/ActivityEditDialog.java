/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package it.cnr.istc.sponsor.tt.gui.activities.edit;

import it.cnr.istc.sponsor.tt.logic.MQTTClient;
import it.cnr.istc.sponsor.tt.logic.MQTTListener;
import it.cnr.istc.sponsor.tt.logic.TrainerManager;
import it.cnr.istc.sponsor.tt.logic.model.ActivityName;
import it.cnr.istc.sponsor.tt.logic.model.Job;
import it.cnr.istc.sponsor.tt.logic.model.Keyword;
import it.cnr.istc.sponsor.tt.logic.model.Person;
import it.cnr.istc.sponsor.tt.logic.model.Project;
import it.cnr.istc.sponsor.tt.logic.model.Skill;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.Beans;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.ListSelectionModel;
import javax.swing.WindowConstants;

/**
 *
 * @author Luca Coraci <luca.coraci@istc.cnr.it> ISTC-CNR
 */
public class ActivityEditDialog extends javax.swing.JDialog implements MQTTListener {

    private boolean canceled = false;

    /**
     * Creates new form ActivityEditDialog
     */
    public ActivityEditDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.setTitle("Seleziona attività");
        initComponents();
        List<ActivityName> activityNames = TrainerManager.getInstance().getActivityNames();
        for (ActivityName activityName : activityNames) {
            if (!activityName.isUsed()) {
                this.activityNameListModel1.addElement(activityName);
            }
        }
        if (!Beans.isDesignTime()) {
            MQTTClient.getInstance().addMQTTListener(this);
        }
    }

    public ActivityName getActivityName() {
        if (canceled) {
            return null;
        }
        ActivityName selectedValue = this.jList1.getSelectedValue();
        if (selectedValue != null) {
            selectedValue.setUsed(true);
        }
        return selectedValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        activityNameListModel1 = new ActivityNameListModel();
        jButton4 = new JButton();
        jScrollPane1 = new JScrollPane();
        jList1 = new JList<>();
        jButton1 = new JButton();
        jButton2 = new JButton();
        jLabel1 = new JLabel();
        jTextField_Nome = new JTextField();
        jButton3 = new JButton();

        jButton4.setIcon(new ImageIcon(getClass().getResource("/it/cnr/istc/sponsor/tt/gui/icons/remove16.png"))); // NOI18N
        jButton4.setText("Elimina");
        jButton4.setEnabled(false);

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

        jList1.setModel(activityNameListModel1);
        jList1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jList1);

        jButton1.setBackground(new Color(255, 51, 51));
        jButton1.setFont(new Font("Gill Sans MT Condensed", 0, 16)); // NOI18N
        jButton1.setForeground(new Color(255, 255, 255));
        jButton1.setIcon(new ImageIcon(getClass().getResource("/it/cnr/istc/sponsor/tt/gui/icons/check32.png"))); // NOI18N
        jButton1.setText("<html><span style='font-size: 18px;'>A</span>GGIUNGI AL PROGETTO");
        jButton1.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new Color(255, 51, 51));
        jButton2.setFont(new Font("Gill Sans MT Condensed", 0, 16)); // NOI18N
        jButton2.setForeground(new Color(255, 255, 255));
        jButton2.setText("<html><span style='font-size: 18px;'>A</span>NNULLA");
        jButton2.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton2.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Nome attività:");

        jButton3.setBackground(new Color(255, 51, 51));
        jButton3.setFont(new Font("Gill Sans MT Condensed", 0, 14)); // NOI18N
        jButton3.setForeground(new Color(255, 255, 255));
        jButton3.setIcon(new ImageIcon(getClass().getResource("/it/cnr/istc/sponsor/tt/gui/icons/add16.png"))); // NOI18N
        jButton3.setText("<html><span style='font-size: 16px;'>C</span>REA");
        jButton3.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton3.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                    .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_Nome)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, GroupLayout.PREFERRED_SIZE, 111, GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2, GroupLayout.PREFERRED_SIZE, 96, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, GroupLayout.PREFERRED_SIZE, 181, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField_Nome, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, GroupLayout.PREFERRED_SIZE, 29, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1, GroupLayout.PREFERRED_SIZE, 37, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, GroupLayout.PREFERRED_SIZE, 36, GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String name = this.jTextField_Nome.getText();
        if (!name.isEmpty()) {
            List<ActivityName> names = TrainerManager.getInstance().getActivityNames();
            for (ActivityName n : names) {
                if(n.getName().equals(name)){
                    JOptionPane.showMessageDialog(null, "Non puoi creare con un nome già in uso!", "Errore", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            MQTTClient.getInstance().createActivityName(name);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        canceled = true;
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ActivityEditDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ActivityEditDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ActivityEditDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ActivityEditDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ActivityEditDialog dialog = new ActivityEditDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private ActivityNameListModel activityNameListModel1;
    private JButton jButton1;
    private JButton jButton2;
    private JButton jButton3;
    private JButton jButton4;
    private JLabel jLabel1;
    private JList<ActivityName> jList1;
    private JScrollPane jScrollPane1;
    private JTextField jTextField_Nome;
    // End of variables declaration//GEN-END:variables

    @Override
    public void peopleDataArrived(List<Person> people) {
    }

    @Override
    public void jobsDataArrived(List<Job> jobs) {
    }

    @Override
    public void projectsDataArrived(List<Project> projects) {
    }

    @Override
    public void projectCreated(Project project) {
    }

    @Override
    public void projectLoaded(Project project) {
    }

    @Override
    public void projectDeleted(long id) {
    }

    @Override
    public void skillsDataArrived(List<Skill> skills) {
    }

    @Override
    public void keywordsDataArrived(List<Keyword> skills) {
    }

    @Override
    public void userDeleted(Long id) {
    }

    @Override
    public void jobDeleted(Long id) {
    }

    @Override
    public void jobCreated(String nameJob, Long id) {
    }

    @Override
    public void keywordDeleted(Long id) {
    }

    @Override
    public void keywordCreated(Long id) {
    }

    @Override
    public void activityNamesDataArrived(List<ActivityName> activities) {
    }

    @Override
    public void activityNameCreated(ActivityName activity) {

        activityNameListModel1.addElement(activity);
    }

    @Override
    public void activityNameDeleted(long id) {
    }

    @Override
    public void userCreated(Person person) {
    }
}
